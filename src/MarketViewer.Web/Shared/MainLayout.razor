@inherits LayoutComponentBase
@inject IJSRuntime JsRuntime

<MudThemeProvider Theme="_themeManager.Theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Dense="true" Elevation="_themeManager.AppBarElevation">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
        <MudSpacer />
        <ClockComponent @ref="clockComponent" Font="20"></ClockComponent>
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="_themeManager.DrawerClipMode" Elevation="_themeManager.DrawerElevation" Variant="DrawerVariant.Temporary">
        <NavMenu></NavMenu>
    </MudDrawer>
    <MudThemeManagerButton OnClick="@((e) => OpenThemeManager(true))" />
    <MudThemeManager Open="_themeManagerOpen" OpenChanged="OpenThemeManager" Theme="_themeManager" ThemeChanged="UpdateTheme" />

    <MudMainContent Class="position-fixed pa-0" Style="top: calc(var(--mud-appbar-height) - var(--mud-appbar-height)/4); height: calc(100% - var(--mud-appbar-height) + var(--mud-appbar-height)/4); width: 100%;">
        <CascadingValue Value="clockComponent">
            @Body
        </CascadingValue>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    private ThemeManagerTheme _themeManager = new ThemeManagerTheme();
    public bool _themeManagerOpen = false;

    private ClockComponent clockComponent;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    void OpenThemeManager(bool value)
    {
        _themeManagerOpen = value;
    }

    void UpdateTheme(ThemeManagerTheme value)
    {
        _themeManager = value;
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        _themeManager.DrawerClipMode = DrawerClipMode.Always;
        StateHasChanged();
    }
}